Trying to log the object properties inside the array:
const names = freelancers.name;
const occupations = freelancers.occupation;
const price = freelancers.price;
console.log(names)
console.log(occupations)
console.log(price)

Names:
 //   const tr1 = docuement.createElement("tr");
  //   tr1.textContent = "Bob";
  //   const tr2 = docuement.createElement("tr");
  //   tr2.textContent = "Emily";
  //   const tr3 = docuement.createElement("tr");
  //   tr3.textContent = "Carol";
  //   table.append(tr1, tr2, tr3);

Occupations:
  //   const or1 = docuement.createElement("tr");
  //   or1.textContent = "Writer";
  //   const or2 = docuement.createElement("tr");
  //   or2.textContent = "Teacher";
  //   const or3 = docuement.createElement("tr");
  //   or3.textContent = "Programmer";

Prices:
  //   const pr1 = docuement.createElement("tr");
  //   pr1.textContent = "$30";
  //   const pr2 = docuement.createElement("tr");
  //   pr2.textContent = "$50";
  //   const pr3 = docuement.createElement("tr");
  //   pr3.textContent = "$60";

  Building Tables:
  //   const nameColumn1 = document.createElement("th");
//   nameColumn1.textContent = "Name";
//   tbody.appendChild(nameColumn1);

//   const jobColumn2 = document.createElement("th");
//   jobColumn2.textContent = "Occupation";
//   tbody.appendChild(jobColumn2);

//   const priceColumn3 = document.createElement("th");
//   priceColumn3.textContent = "Price";
//   tbody.appendChild(priceColumn3);

  // table.append(tr1, tr2, tr3);


  //   const tbody = document.createElement(tbody);
//   table.appendChild(tbody);

 const tableRow = document.createElement("table");
//     const table = document.querySelector("#table");
 //     table.appendChild(tableRow);


  // Create new freelancer object and push into the freelancers array
    //     freelancers.push({ name, price, occupation });


   // Makes a table with everything on 1 line:
    //     const newRow = document.createElement("tr");

    //     freelancers.forEach((freelancer) => {
    //       const nameCell = document.createElement("td");
    //       nameCell.textContent = freelancer.name;

    //       const occupationCell = document.createElement("td");
    //       occupationCell.textContent = freelancer.occupation;

    //       const priceCell = document.createElement("td");
    //       priceCell.textContent = `$${freelancer.price}`;

    //       table.appendChild(newRow);
    //       newRow.append(nameCell, occupationCell, priceCell);
    //     });




// const rowElements = freelancers.map((freelancer) => {
//         const newRow = document.createElement('tr');
//         const { name, price, occupation } = freelancer;
//         const nameDetail = document.createElement('td');
//         nameDetail.innerText = name;

//         const occupationDetail = document.createElement('td');
//         occupationDetail.innerText = occupation;
    
//         const priceDetail = document.createElement('td');
//         priceDetail.innerText = `$${price}`;
//         newRow.append(nameDetail, occupationDetail, priceDetail);
//         return newRow;
// });

Working on functions for adding freelancers: 
const freelancer = document.createElement("tr");
const freelancer = document.createElement("td");
  class Freelancer {
  // These are properties
  name = " ";
  occupation = " ";
  price;
  // the parens items are the arguments here
  constructor(name, occupation, price) {
    this.name = name;
    this.occupation = occupation;
    this.price = price;
  }
}


// function addFreelancer(Freelancer) {
//   const allFreelancers = freelancers;
//   allFreelancers.push(Freelancer);
// }
// const prism = new Freelancer("Prism", "Driver", 20);
// freelancers.addFreelancer(prism);



const newRow = document.createElement("tr");
  const { name, price, occupation } = freelancer;
  const nameCell = document.createElement("td");
  nameCell.innerText = name;

  const occupationCell = document.createElement("td");
  occupationCell.innerText = occupation;

  const priceCell = document.createElement("td");
  priceCell.innerText = `$${price}`;

  // Append all the "td" elements to the row
  newRow.append(nameCell, occupationCell, priceCell);
  // Return the newly created row & its child elements
  tBody.append(newRow);
  return tableRowRender(freelancers);

  function addFreelancer() {
  const addPrice = Math.floor(Math.random() * 8) * 10 + 20;
  const addName = names[Math.floor(Math.random() * names.length)];
  const addJob = jobs[Math.floor(Math.random() * jobs.length)];

  freelancers.push({ name: addName, occupation: addJob, price: addPrice });
}

function tableRowRender() {
        const averagePrice = document.querySelector('#average-price');
        const tableBody = document.querySelector('#table-body');
      
        // Create an array of row elements from the freelancers array
        const rowElements = freelancers.map((freelancer) => {
          // Create a new row for each freelancer
          const newRow = document.createElement('tr');
          // Object destructuring: https://dmitripavlutin.com/javascript-object-destructuring/
          const { name, price, occupation } = freelancer;
          // Create "td" elements for each detail & add the text
          const nameDetail = document.createElement('td');
          nameDetail.innerText = name;
      
          const occupationDetail = document.createElement('td');
          occupationDetail.innerText = occupation;
      
          const priceDetail = document.createElement('td');
          priceDetail.innerText = `$${price}`;
      
          // Append all the "td" elements to the row
          newRow.append(nameDetail, occupationDetail, priceDetail);
          // Return the newly created row & its child elements
          
        });
}

Trying to change the paragraph to include the avg:
const rootContainer = document.getElementById("root");
avgParagraph2.textContent = "The Average Starting Price is :" (averagePrice());
rootContainer.avgParagraph.appendChild(avgParagraph2);


//   calculateAveragePrice();

This only checks the freelancer array for averages, not the new inputs:
function calculateAveragePrice() {
  const total = freelancers.reduce(
    (subtotal, current) => subtotal + current.price,
    0
  );
  return Math.round(total / freelancers.length);
}

Finding the price table: 
table.getElementsByTagName("td").item(2)


function getPrices() {
    myTableArray = [];
    let tableData = table.getElementsByTagName("td").item(2);
    if (tableData.length > 0) {
      tableData.each(function () {
        arrayOfThisColumn.push($(td).item(2));
      });
    }
    console.log(myTableArray);
  }
  getPrices();